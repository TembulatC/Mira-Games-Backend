services:
  web:
    build:
      context: .
      dockerfile: MiraGamesBackend/Dockerfile
    container_name: miragamesapp-dev
    ports:
      - "5200:8080"
    env_file:
      - .env
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=${DB_CONNECTION_STRING}
      - ConnectionStrings__ClickHouseConnection=${DB_CONNECTION_STRING}
      - UseRealSteamParsing=false
    networks:
      - miragames-network
    depends_on:
      postgres:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/bin
      - /app/obj

  postgres:
    image: postgres:15
    container_name: postgredb
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5434:${POSTGRES_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - miragames-network

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: clickhousedb
    environment:
      - CLICKHOUSE_DB=${CLICKHOUSE_DB}
      - CLICKHOUSE_USER=${CLICKHOUSE_USER}
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD}
    ports:
      - "8124:${CLICKHOUSE_PORT}"
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8123/ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - miragames-network

volumes:
  postgres_data:
  clickhouse_data:

networks:
  miragames-network:
    driver: bridge